{"version":3,"file":"static/js/706.7b417bcc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","webpack://react-homework-template/./src/components/List/List.module.css?2bcc","components/List/List.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"formField\":\"Form_formField__0BF+h\",\"formLabel\":\"Form_formLabel__alHO0\",\"formButton\":\"Form_formButton__7mGGM\"};","import { useState } from 'react';\nimport css from './Form.module.css';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsList } from '../../redux/selector';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const Form =() => {\nconst dispatch = useDispatch();\nconst [name, setName] = useState('');\nconst [number, setNumber] = useState('');\nconst contacts = useSelector(getContactsList);\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  }\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if(name.trim()===\"\" || number.trim()==='') {\n      return;\n    }\n\n    const existingContact = contacts.find(contact => contact.name.toLowerCase()=== name.toLowerCase())\n    if (existingContact) {\n      toast(`${name} is already in contacts!`);\n      return;\n    }\n\n        // Add Contact\n        const contact ={\n          name,\n          number,\n        };\n    dispatch(addContact(contact));\n    // Reset Form Fields upon submitting\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formField}>\n        <p className={css.formLabel}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          // add \\ before - in [' \\-] to make it work (LMS)\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n\n      <label className={css.formField}>\n        <p className={css.formLabel}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // add \\ before - in [\\-.\\s] to make it work (LMS)\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button className={css.formButton} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    )}","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import css from './Filter.module.css';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n    //filter name based on the the search keyword\n    const handleFilterChange = e => {\n      dispatch(setFilter(e.target.value));\n    };\n\n  return (\n    <div className={css.container}>\n      <p>Find Contacts by Name</p>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search by name\"\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ListItem_listItem__POSh4\",\"contactName\":\"ListItem_contactName__cUn7K\",\"delBtn\":\"ListItem_delBtn__u1Qxy\"};","import { useDispatch } from 'react-redux';\nimport css from './ListItem.module.css';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ListItem = ({ filteredContact }) => {\n  // handleDelete method\n  const dispatch=useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(filteredContact.id));\n  };\n\n  return (\n    <li className={css.listItem}>\n      <p className={css.contactName}>{filteredContact.name}:</p>\n      <p>{filteredContact.number}</p>\n      <button className={css.delBtn} onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  filteredContact: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listUl\":\"List_listUl__6SUy+\"};","import { ListItem } from 'components/ListItem/ListItem';\nimport css from './List.module.css';\nimport { getContactsList, getFilter, getIsLoading } from '../../redux/selector';\nimport { useSelector } from 'react-redux';\nimport { Loader } from 'components/Loading/Loading';\n\n\nconst getFilteredContact = (filter, contacts) => {\n  const filteredContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter);\n  })\n  return filteredContacts;\n\n}\n\nexport const List = () => {\n  const contacts = useSelector(getContactsList);\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContact(filter, contacts);\n  const isLoading = useSelector(getIsLoading);\n\n\n  return isLoading? (<Loader/>) : (\n    <>\n    <ul className={css.listUl}>\n      {filteredContacts.map(filteredContact => (\n        <ListItem\n          key={filteredContact.id}\n          filteredContact={filteredContact}\n        />\n      ))}\n    </ul>\n    </>\n  );\n};\n","// contains Phonebook form, Filter, Contacts List\n\nimport {React, useEffect} from 'react'\nimport { Helmet, HelmetProvider } from 'react-helmet-async'\n\nimport { Form } from 'components/Form/Form'\nimport { Filter } from 'components/Filter/Filter'\nimport { List } from 'components/List/List'\nimport { useDispatch } from 'react-redux'\nimport { fetchContacts } from '../../redux/contacts/operations'\n\n\nconst ContactsPage = () => {\n    const dispatch=useDispatch();\n\n    useEffect(()=>{\n        dispatch(fetchContacts())\n      }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n        <Helmet>\n            <title>Contacts</title>\n        </Helmet>\n        <div>\n            <Form />\n            <h2>Contacts</h2>\n            <Filter/>\n            <List/>\n        </div>\n    </HelmetProvider>\n  )\n}\n\nexport default ContactsPage\n"],"names":["Form","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","getContactsList","_jsxs","className","css","onSubmit","e","preventDefault","trim","existingContact","find","contact","toLowerCase","toast","concat","addContact","children","_jsx","type","pattern","title","required","value","onChange","target","Filter","placeholder","setFilter","ListItem","_ref","filteredContact","onClick","deleteContact","id","List","filteredContacts","filter","includes","getFilteredContact","getFilter","getIsLoading","Loader","_Fragment","map","useEffect","fetchContacts","HelmetProvider","Helmet"],"sourceRoot":""}